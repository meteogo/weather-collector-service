services:
  postgres:
    image: postgres:16.4
    container_name: meteogo_weather_collector_service_postgres
    environment:
      POSTGRES_DB: "meteogo-weather-collector-service-db"
      POSTGRES_USER: "user"
      POSTGRES_PASSWORD: "password"
    ports:
        - "${POSTGRES_PORT}:${POSTGRES_PORT}"

  zookeeper:
    image: zookeeper:3.9
    ports:
      - "${ZOOKEEPER_PORT}:${ZOOKEEPER_PORT}"
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_PORT}

  kafka:
    image: wurstmeister/kafka:2.13-2.8.1
    ports:
      - "${KAFKA_PORT}:${KAFKA_PORT}"
    environment:
      KAFKA_ADVERTISED_LISTENERS: DOCKER://kafka:${KAFKA_PORT},HOST://localhost:${KAFKA_PORT}
      KAFKA_LISTENERS: DOCKER://0.0.0.0:${KAFKA_PORT_EXT},HOST://0.0.0.0:${KAFKA_PORT}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER:PLAINTEXT,HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:${ZOOKEEPER_PORT}
      KAFKA_CREATE_TOPICS: "${KAFKA_WEATHER_TOPIC_NAME}:1:1"
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--list", "--bootstrap-server", "kafka:${KAFKA_PORT}"]
      interval: 5s
      timeout: 10s
      retries: 10

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "${KAFKA_UI_PORT}:${KAFKA_UI_PORT}"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:${KAFKA_PORT_EXT}
    depends_on:
      kafka:
        condition: service_healthy

  jaeger:
    image: jaegertracing/all-in-one:1.62.0
    container_name: upassed_form_service_jaeger
    ports:
      - "${JAEGER_UI_PORT}:${JAEGER_UI_PORT}"
      - "${JAEGER_PORT}:${JAEGER_PORT}"
